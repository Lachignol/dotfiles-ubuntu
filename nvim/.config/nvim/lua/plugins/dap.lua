return {
    -- Plugin principal pour le d√©bogage
    {
        "mfussenegger/nvim-dap",
        dependencies = {
            -- Interface utilisateur pour nvim-dap
            "rcarriga/nvim-dap-ui",
            -- Texte virtuel pour afficher les variables dans le code
            "theHamsta/nvim-dap-virtual-text",
            -- Int√©gration avec Mason pour g√©rer les installations des adaptateurs DAP
            "jay-babu/mason-nvim-dap.nvim",
            -- Support sp√©cifique pour le d√©bogage Go
            "leoluz/nvim-dap-go",
        },
        config = function()
            local dap = require("dap")
            local dapui = require("dapui")

            -- Configurer dap-ui pour afficher l'interface utilisateur du d√©bogueur
            dapui.setup()

            -- Ouvrir/fermer automatiquement l'interface utilisateur DAP lors des √©v√©nements de d√©bogage
            dap.listeners.after.event_initialized["dapui_config"] = function()
                dapui.open()  -- Ouvre l'interface lorsque le d√©bogage commence
            end
            dap.listeners.before.event_terminated["dapui_config"] = function()
                dapui.close()  -- Ferme l'interface lorsque le d√©bogage est termin√©
            end
            dap.listeners.before.event_exited["dapui_config"] = function()
                dapui.close()  -- Ferme l'interface lorsque le processus de d√©bogage est quitt√©
            end

            -- Configurer nvim-dap-virtual-text pour afficher des informations sur les variables dans le code
            require("nvim-dap-virtual-text").setup()

            -- Configurer Mason pour installer automatiquement les d√©bogueurs n√©cessaires
            require("mason-nvim-dap").setup({
                ensure_installed = { "delve", "cppdbg" }, -- Assurer l'installation de d√©bogueurs Go et C/C++
                automatic_installation = true,  -- Installation automatique des d√©bogueurs
            })

            -- Configurer le support sp√©cifique pour Go avec nvim-dap-go
            require("dap-go").setup()

            -- Ajouter des symboles visuels pour les points d'arr√™t dans le code
            vim.fn.sign_define("DapBreakpoint", {
                text = "üî¥",  -- D√©finir l'ic√¥ne pour un point d'arr√™t
                texthl = "",
                linehl = "",
                numhl = ""
            })
        end,
    },
}

